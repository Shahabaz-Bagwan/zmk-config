/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define COLE 1
/*#define QWER 2*/
#define NAV 2
#define NUM 3
#define MOUSE 4
#define FUN 5
#define ADJ 6

/ {
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <220>;
                        quick_tap_ms = <0>;
                        flavor = "balanced";
                        bindings = <&kp>, <&kp>;
                };
        };

        keymap {
                compatible = "zmk,keymap";


                default_layer {
                        bindings = <
   &mt RALT Q  &kp W       &kp E          &kp R          &kp T             &kp Y        &kp U         &kp I            &kp O          &mt RALT P
   &kp A       &kp S       &kp D          &kp F          &kp G             &kp H        &kp J         &kp K            &kp L          &kp SEMI
   &hm LALT Z  &hm LGUI X  &hm LCTRL C    &hm LSHFT V    &kp B             &kp N        &hm RSHFT M   &hm LCTRL COMMA  &hm LGUI DOT   &hm LALT FSLH
                           &mt RCTL ESC   &lt NAV SPACE  &lt MOUSE TAB     &kp RET      &lt NUM BSPC  &lt FUN DEL
                        >;
                };
 
                cole_layer {
                        bindings = <
   &mt RALT Q  &kp W       &kp F          &kp P          &kp B             &kp J        &kp L         &kp U            &kp Y          &mt RALT SEMI
   &kp A       &kp R       &kp S          &kp T          &kp G             &kp K        &kp N         &kp E            &kp I          &kp O
   &hm LALT Z  &hm LGUI X  &hm LCTRL C    &hm LSHFT D    &kp V             &kp M        &hm RSHFT H   &hm LCTRL COMMA  &hm LGUI DOT   &hm LALT FSLH
                           &mt RCTL ESC        &lt NAV SPACE  &lt MOUSE TAB     &kp RET      &lt NUM BSPC  &lt FUN DEL
                        >;
                };

                /*qwer_layer {*/
                        /*bindings = <*/
   /*&kp Q       &kp W       &kp E          &kp R          &kp T             &kp Y        &kp U         &kp I            &kp O          &mt RCTL P*/
   /*&kp A       &kp S       &kp D          &kp F          &kp G             &kp H        &kp J         &kp K            &kp L          &kp SEMI*/
   /*&hm LALT Z  &hm LGUI X  &hm LCTRL C    &hm LSHFT V    &mt RALT B        &mt RALT N   &hm RSHFT M   &hm LCTRL COMMA  &hm LGUI DOT   &hm LALT FSLH*/
                           /*&kp ESC        &lt NAV SPACE  &lt MOUSE TAB     &kp RET      &lt NUM BSPC  &lt FUN DEL*/
                        /*>;*/
                /*};*/

                nav_layer {
                        bindings = <
   &none     &none         &none          &none          &tog NUM          &kp CAPS     &kp C_VOL_DN  &kp C_VOL_UP     &kp K_MUTE     &none
   &kp LALT  &kp LGUI      &kp LCTRL      &kp LSHFT      &none             &kp LEFT     &kp DOWN      &kp UP           &kp RIGHT      &none
   &kp LALT  &kp LGUI      &kp LCTRL      &kp LSHFT      &none             &kp HOME     &kp PG_DN     &kp PG_UP        &kp END        &none
                           &none          &none          &none             &kp RET      &kp BSPC      &kp DEL
                        >;
                };

                num_layer {
                        bindings = <
   &kp LBKT    &kp N7      &kp N8         &kp N9         &kp RBKT          &tog NUM     &none         &none            &none          &none
   &kp SQT     &kp N4      &kp N5         &kp N6         &kp EQUAL         &kp DEL      &kp LSHFT     &kp LCTRL        &kp LGUI       &kp LALT
   &kp GRAVE   &kp N1      &kp N2         &kp N3         &kp BSLH          &none        &kp LSHFT     &kp LCTRL        &kp LGUI       &kp LALT
                           &kp DOT        &kp N0         &kp MINUS         &none        &none         &none
                        >;
                };

                mouse_layer {
                        bindings = <
   &none     &none         &none          &none          &none             &none             &none            &none          &none             &none
   &kp LALT  &kp LGUI      &kp LCTRL      &kp LSHFT      &none             &mmv MOVE_LEFT    &mmv MOVE_DOWN   &mmv MOVE_UP   &mmv MOVE_RIGHT   &none
   &kp LALT  &kp LGUI      &kp LCTRL      &kp LSHFT      &none             &mwh SCROLL_LEFT  &mwh SCROLL_DOWN &mwh SCROLL_UP &mwh SCROLL_RIGHT &none
                           &none          &none          &none             &mkp LCLK         &mkp MCLK        &mkp RCLK
                        >;
                };

                fun_layer {
                        bindings = <
   &kp F12     &kp F7      &kp F8         &kp F9         &kp PSCRN         &none        &none         &none            &none       &none
   &kp F11     &kp F4      &kp F5         &kp F6         &kp SLCK          &none        &kp LSHFT     &kp LCTRL        &kp LGUI       &kp LALT
   &kp F10     &kp F1      &kp F2         &kp F3         &kp PAUSE_BREAK   &none        &kp LSHFT     &kp LCTRL        &kp LGUI       &kp LALT
                           &tog COLE      &kp SPACE      &kp TAB           &mo ADJ      &none         &none
                        >;
                };

                adj_layer {
                        bindings = <
   &none         &none         &none         &none        &none            &none        &none   &none   &none   &none
   &bt BT_CLR    &bt BT_PRV    &bt BT_NXT    &reset       &bootloader      &bootloader  &reset  &none   &none   &none
   &out OUT_TOG  &none         &none         &none        &none            &none        &none   &none   &none   &none
                               &none         &none        &none            &none        &none   &none
                        >;
                };
        };
};
